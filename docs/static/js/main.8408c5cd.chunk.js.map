{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","Helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEvCC,EAFuC,KAE1BC,EAF0B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,MAKf,SACG,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCRlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGjC,OAFAC,QAAQC,IAAIH,EAAOC,GAGf,sBAAKG,UAAU,yCAAf,UACE,qBAAKC,IAAKJ,EAAKK,IAAKN,IACpB,4BAAIA,Q,uBCNDO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbR,EADa,iDACmCS,UAAUF,GAD7C,+DAECG,MAAMV,GAFP,cAEbW,EAFa,gBAGMA,EAAKC,OAHX,uBAGVC,EAHU,EAGVA,KAEHC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBnB,QATvB,kBAYZc,GAZY,4CAAH,sDCKPM,EAAU,SAAC,GAAmB,IAAhBb,EAAe,EAAfA,SAAe,ECFd,SAACA,GAAc,IAAD,EAEhBtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAmB1C,OAXAC,qBAAU,WACJlB,EAAQC,GACLkB,MAAM,SAAAC,GACHH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGjB,CAACd,IAGFe,EDf6BK,CAAapB,GAAlCW,EAF2B,EAEhCL,KAAcQ,EAFkB,EAElBA,QAIpB,OACI,qCACA,qBAAIlB,UAAU,oCAAd,cAAqDI,KACnDc,GAAW,mBAAGlB,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAEWe,EAAOH,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,eAAgCA,GAAZA,EAAIC,aEZlDW,EAAe,WAAO,IAAD,EAEK3C,mBAAU,CAAC,kBAFhB,mBAEzB4C,EAFyB,KAEb7C,EAFa,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWd,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAYA,GADNA,YCd9BuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8408c5cd.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from  'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue , setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n         setCategories(cats => [ inputValue,...cats]);\r\n         setInputValue('')  ;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange = {handleInputChange}\r\n           />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","export const GifGridItem = ( {title, url})  => {\r\n    console.log(title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src={url} alt={title}></img>\r\n          <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=GpXW1nZoV6t5u8gdNdGsTzphjYt4M0mf`;\r\n    const resp  = await fetch(url);\r\n    const  { data } =  await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};","\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\n                      \r\nexport const GifGrid = ( { category }) => {\r\n\r\n   const {data:images , loading } = useFetchGifs(category);\r\n  \r\n\r\n\r\n    return  (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\"> Loading.. </p> }\r\n         <div className='card-grid'>\r\n                {\r\n                    images.map( img => <GifGridItem key = {img.id} {...img}/>\r\n                    )\r\n                }\r\n         </div>    \r\n        </>\r\n    )\r\n\r\n}","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\nconst [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n});\r\n\r\n\r\nuseEffect(()=>{\r\n      getGifs(category)\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            }); \r\n         })\r\n     }, [category] );\r\n\r\n\r\nreturn state;\r\n\r\n};","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   const[categories, setCategories]  = useState( ['Dragon Ball Z']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}></AddCategory>\r\n            <hr/>\r\n         \r\n            <ol>\r\n                {\r\n                    categories.map( category =>  \r\n                        <GifGrid \r\n                        key= {category}\r\n                        category = {category}></GifGrid>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}